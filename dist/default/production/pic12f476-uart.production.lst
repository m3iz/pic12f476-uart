

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Oct 29 11:17:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	dabs	1,0x5E,2
    11     0000                     
    12                           ; Generated 17/08/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC12F675 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     GPIO            equ	5	;# 
    60     000A                     PCLATH          equ	10	;# 
    61     000B                     INTCON          equ	11	;# 
    62     000C                     PIR1            equ	12	;# 
    63     000E                     TMR1            equ	14	;# 
    64     000E                     TMR1L           equ	14	;# 
    65     000F                     TMR1H           equ	15	;# 
    66     0010                     T1CON           equ	16	;# 
    67     0019                     CMCON           equ	25	;# 
    68     001E                     ADRESH          equ	30	;# 
    69     001F                     ADCON0          equ	31	;# 
    70     0081                     OPTION_REG      equ	129	;# 
    71     0085                     TRISIO          equ	133	;# 
    72     008C                     PIE1            equ	140	;# 
    73     008E                     PCON            equ	142	;# 
    74     0090                     OSCCAL          equ	144	;# 
    75     0095                     WPU             equ	149	;# 
    76     0096                     IOC             equ	150	;# 
    77     0096                     IOCB            equ	150	;# 
    78     0099                     VRCON           equ	153	;# 
    79     009A                     EEDATA          equ	154	;# 
    80     009A                     EEDAT           equ	154	;# 
    81     009B                     EEADR           equ	155	;# 
    82     009C                     EECON1          equ	156	;# 
    83     009D                     EECON2          equ	157	;# 
    84     009E                     ADRESL          equ	158	;# 
    85     009F                     ANSEL           equ	159	;# 
    86     0000                     nosup@@$_$_CONFIG set	0	;# 
    87     0000                     INDF            equ	0	;# 
    88     0001                     TMR0            equ	1	;# 
    89     0002                     PCL             equ	2	;# 
    90     0003                     STATUS          equ	3	;# 
    91     0004                     FSR             equ	4	;# 
    92     0005                     GPIO            equ	5	;# 
    93     000A                     PCLATH          equ	10	;# 
    94     000B                     INTCON          equ	11	;# 
    95     000C                     PIR1            equ	12	;# 
    96     000E                     TMR1            equ	14	;# 
    97     000E                     TMR1L           equ	14	;# 
    98     000F                     TMR1H           equ	15	;# 
    99     0010                     T1CON           equ	16	;# 
   100     0019                     CMCON           equ	25	;# 
   101     001E                     ADRESH          equ	30	;# 
   102     001F                     ADCON0          equ	31	;# 
   103     0081                     OPTION_REG      equ	129	;# 
   104     0085                     TRISIO          equ	133	;# 
   105     008C                     PIE1            equ	140	;# 
   106     008E                     PCON            equ	142	;# 
   107     0090                     OSCCAL          equ	144	;# 
   108     0095                     WPU             equ	149	;# 
   109     0096                     IOC             equ	150	;# 
   110     0096                     IOCB            equ	150	;# 
   111     0099                     VRCON           equ	153	;# 
   112     009A                     EEDATA          equ	154	;# 
   113     009A                     EEDAT           equ	154	;# 
   114     009B                     EEADR           equ	155	;# 
   115     009C                     EECON1          equ	156	;# 
   116     009D                     EECON2          equ	157	;# 
   117     009E                     ADRESL          equ	158	;# 
   118     009F                     ANSEL           equ	159	;# 
   119     0000                     INDF            equ	0	;# 
   120     0001                     TMR0            equ	1	;# 
   121     0002                     PCL             equ	2	;# 
   122     0003                     STATUS          equ	3	;# 
   123     0004                     FSR             equ	4	;# 
   124     0005                     GPIO            equ	5	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0019                     CMCON           equ	25	;# 
   133     001E                     ADRESH          equ	30	;# 
   134     001F                     ADCON0          equ	31	;# 
   135     0081                     OPTION_REG      equ	129	;# 
   136     0085                     TRISIO          equ	133	;# 
   137     008C                     PIE1            equ	140	;# 
   138     008E                     PCON            equ	142	;# 
   139     0090                     OSCCAL          equ	144	;# 
   140     0095                     WPU             equ	149	;# 
   141     0096                     IOC             equ	150	;# 
   142     0096                     IOCB            equ	150	;# 
   143     0099                     VRCON           equ	153	;# 
   144     009A                     EEDATA          equ	154	;# 
   145     009A                     EEDAT           equ	154	;# 
   146     009B                     EEADR           equ	155	;# 
   147     009C                     EECON1          equ	156	;# 
   148     009D                     EECON2          equ	157	;# 
   149     009E                     ADRESL          equ	158	;# 
   150     009F                     ANSEL           equ	159	;# 
   151     0005                     _GPIO           set	5
   152     0019                     _CMCON          set	25
   153     001F                     _ADCON0         set	31
   154     0029                     _GP1            set	41
   155     0028                     _GP0            set	40
   156     0085                     _TRISIO         set	133
   157     0099                     _VRCON          set	153
   158     009F                     _ANSEL          set	159
   159     0428                     _TRISIO0        set	1064
   160     0429                     _TRISIO1        set	1065
   161                           
   162                           	psect	cinit
   163     03FD                     start_initialization:	
   164                           ; #config settings
   165                           
   166     03FD                     __initialization:
   167     03FD                     end_of_initialization:	
   168                           ;End of C runtime variable initialization code
   169                           
   170     03FD                     __end_of__initialization:
   171     03FD  0183               	clrf	3
   172     03FE  2BBA               	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	cstackCOMMON
   175     0000                     __pcstackCOMMON:
   176     0000                     ??_InitSoftUART:
   177     0000                     ??_main:	
   178                           ; 1 bytes @ 0x0
   179                           
   180                           
   181                           	psect	cstackBANK0
   182     0020                     __pcstackBANK0:	
   183                           ; 1 bytes @ 0x0
   184                           
   185     0020                     ?_InitSoftUART:
   186     0020                     ?_UART_Transmit:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0020                     ?_main:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0020                     ??_UART_Transmit:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197     0020                     	ds	1
   198     0021                     UART_Transmit@DataValue:
   199                           
   200                           ; 1 bytes @ 0x1
   201     0021                     	ds	1
   202     0022                     UART_Transmit@i:
   203                           
   204                           ; 1 bytes @ 0x2
   205     0022                     	ds	1
   206                           
   207                           	psect	maintext
   208     03BA                     __pmaintext:	
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 20 in file "Main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  ch              1    0        unsigned char 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0, pclath, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0
   228 ;;      Params:         0       0
   229 ;;      Locals:         0       0
   230 ;;      Temps:          0       0
   231 ;;      Totals:         0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels required when called: 1
   234 ;; This function calls:
   235 ;;		_InitSoftUART
   236 ;;		_UART_Transmit
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     03BA                     _main:	
   243                           ;psect for function _main
   244                           
   245     03BA                     l683:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   248                           
   249                           
   250                           ;Main.c: 24:  ANSEL = 0x00;
   251     03BA  1683               	bsf	3,5	;RP0=1, select bank1
   252     03BB  019F               	clrf	31	;volatile
   253                           
   254                           ;Main.c: 25:  ADCON0 = 0x00;
   255     03BC  1283               	bcf	3,5	;RP0=0, select bank0
   256     03BD  019F               	clrf	31	;volatile
   257     03BE                     l685:
   258                           
   259                           ;Main.c: 26:  CMCON = 0x07;
   260     03BE  3007               	movlw	7
   261     03BF  0099               	movwf	25	;volatile
   262                           
   263                           ;Main.c: 27:  VRCON = 0x00;
   264     03C0  1683               	bsf	3,5	;RP0=1, select bank1
   265     03C1  0199               	clrf	25	;volatile
   266     03C2                     l687:
   267                           
   268                           ;Main.c: 28:  TRISIO = 0x08;
   269     03C2  3008               	movlw	8
   270     03C3  0085               	movwf	5	;volatile
   271                           
   272                           ;Main.c: 29:  GPIO = 0x00;
   273     03C4  1283               	bcf	3,5	;RP0=0, select bank0
   274     03C5  0185               	clrf	5	;volatile
   275     03C6                     l689:
   276                           
   277                           ;Main.c: 31:  InitSoftUART();
   278     03C6  23B4               	fcall	_InitSoftUART
   279     03C7                     l691:
   280                           
   281                           ;Main.c: 34:  {;Main.c: 36:   UART_Transmit('A');
   282     03C7  3041               	movlw	65
   283     03C8  23CB               	fcall	_UART_Transmit
   284     03C9  2BC7               	goto	l691
   285     03CA  2800               	ljmp	start
   286     03CB                     __end_of_main:
   287                           
   288                           	psect	text1
   289     03CB                     __ptext1:	
   290 ;; *************** function _UART_Transmit *****************
   291 ;; Defined at:
   292 ;;		line 54 in file "Software_UART.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;  DataValue       1    wreg     const unsigned char 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  DataValue       1    1[BANK0 ] const unsigned char 
   297 ;;  i               1    2[BANK0 ] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0
   307 ;;      Params:         0       0
   308 ;;      Locals:         0       2
   309 ;;      Temps:          0       1
   310 ;;      Totals:         0       3
   311 ;;Total ram usage:        3 bytes
   312 ;; Hardware stack levels used: 1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320     03CB                     _UART_Transmit:	
   321                           ;psect for function _UART_Transmit
   322                           
   323                           
   324                           ;incstack = 0
   325                           ; Regs used in _UART_Transmit: [wreg+status,2+status,0]
   326                           ;UART_Transmit@DataValue stored from wreg
   327     03CB  1283               	bcf	3,5	;RP0=0, select bank0
   328     03CC  00A1               	movwf	UART_Transmit@DataValue
   329     03CD                     l661:
   330                           
   331                           ;Software_UART.c: 54: void UART_Transmit(const char DataValue);Software_UART.c: 55: {;So
      +                          ftware_UART.c: 65:  GP0 = 0;
   332     03CD  1005               	bcf	5,0	;volatile
   333     03CE                     l663:
   334                           
   335                           ;Software_UART.c: 66:  _delay((unsigned long)(((1000000/1200))*(4000000/4000000.0)));
   336     03CE  30A6               	movlw	166
   337     03CF  00A0               	movwf	??_UART_Transmit
   338     03D0                     u117:
   339     03D0  2BD1               	nop2
   340     03D1  0BA0               	decfsz	??_UART_Transmit,f
   341     03D2  2BD0               	goto	u117
   342     03D3  2BD4               	nop2
   343     03D4                     l665:
   344                           
   345                           ;Software_UART.c: 68:  for ( unsigned char i = 0; i < 8; i++ )
   346     03D4  1283               	bcf	3,5	;RP0=0, select bank0
   347     03D5  01A2               	clrf	UART_Transmit@i
   348     03D6                     l671:
   349                           
   350                           ;Software_UART.c: 69:  {;Software_UART.c: 71:   if( ((DataValue>>i)&0x1) == 0x1 )
   351     03D6  0821               	movf	UART_Transmit@DataValue,w
   352     03D7  00A0               	movwf	??_UART_Transmit
   353     03D8  0A22               	incf	UART_Transmit@i,w
   354     03D9  2BDC               	goto	u84
   355     03DA                     u85:
   356     03DA  1003               	clrc
   357     03DB  0CA0               	rrf	??_UART_Transmit,f
   358     03DC                     u84:
   359     03DC  3EFF               	addlw	-1
   360     03DD  1D03               	skipz
   361     03DE  2BDA               	goto	u85
   362     03DF  1C20               	btfss	??_UART_Transmit,0
   363     03E0  2BE2               	goto	u91
   364     03E1  2BE3               	goto	u90
   365     03E2                     u91:
   366     03E2  2BE5               	goto	l53
   367     03E3                     u90:
   368     03E3                     l673:
   369                           
   370                           ;Software_UART.c: 72:   {;Software_UART.c: 73:    GP0 = 1;
   371     03E3  1405               	bsf	5,0	;volatile
   372                           
   373                           ;Software_UART.c: 74:   }
   374     03E4  2BE6               	goto	l675
   375     03E5                     l53:	
   376                           ;Software_UART.c: 75:   else
   377                           
   378                           
   379                           ;Software_UART.c: 76:   {;Software_UART.c: 77:    GP0 = 0;
   380     03E5  1005               	bcf	5,0	;volatile
   381     03E6                     l675:
   382                           
   383                           ;Software_UART.c: 80:      _delay((unsigned long)(((1000000/1200))*(4000000/4000000.0)))
      +                          ;
   384     03E6  30A6               	movlw	166
   385     03E7  00A0               	movwf	??_UART_Transmit
   386     03E8                     u127:
   387     03E8  2BE9               	nop2
   388     03E9  0BA0               	decfsz	??_UART_Transmit,f
   389     03EA  2BE8               	goto	u127
   390     03EB  2BEC               	nop2
   391     03EC                     l677:
   392                           
   393                           ;Software_UART.c: 81:  }
   394     03EC  3001               	movlw	1
   395     03ED  1283               	bcf	3,5	;RP0=0, select bank0
   396     03EE  07A2               	addwf	UART_Transmit@i,f
   397     03EF                     l679:
   398     03EF  3008               	movlw	8
   399     03F0  0222               	subwf	UART_Transmit@i,w
   400     03F1  1C03               	skipc
   401     03F2  2BF4               	goto	u101
   402     03F3  2BF5               	goto	u100
   403     03F4                     u101:
   404     03F4  2BD6               	goto	l671
   405     03F5                     u100:
   406     03F5                     l52:
   407                           
   408                           ;Software_UART.c: 84:  GP0 = 1;
   409     03F5  1405               	bsf	5,0	;volatile
   410     03F6                     l681:
   411                           
   412                           ;Software_UART.c: 85:  _delay((unsigned long)(((1000000/1200))*(4000000/4000000.0)));
   413     03F6  30A6               	movlw	166
   414     03F7  00A0               	movwf	??_UART_Transmit
   415     03F8                     u137:
   416     03F8  2BF9               	nop2
   417     03F9  0BA0               	decfsz	??_UART_Transmit,f
   418     03FA  2BF8               	goto	u137
   419     03FB  2BFC               	nop2
   420     03FC                     l55:
   421     03FC  0008               	return
   422     03FD                     __end_of_UART_Transmit:
   423                           
   424                           	psect	text2
   425     03B4                     __ptext2:	
   426 ;; *************** function _InitSoftUART *****************
   427 ;; Defined at:
   428 ;;		line 5 in file "Software_UART.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		None
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0
   442 ;;      Params:         0       0
   443 ;;      Locals:         0       0
   444 ;;      Temps:          0       0
   445 ;;      Totals:         0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455     03B4                     _InitSoftUART:	
   456                           ;psect for function _InitSoftUART
   457                           
   458     03B4                     l659:	
   459                           ;incstack = 0
   460                           ; Regs used in _InitSoftUART: []
   461                           
   462                           
   463                           ;Software_UART.c: 7:  GP0 = 1;
   464     03B4  1283               	bcf	3,5	;RP0=0, select bank0
   465     03B5  1405               	bsf	5,0	;volatile
   466                           
   467                           ;Software_UART.c: 9:  TRISIO1 = 1;
   468     03B6  1683               	bsf	3,5	;RP0=1, select bank1
   469     03B7  1485               	bsf	5,1	;volatile
   470                           
   471                           ;Software_UART.c: 10:  TRISIO0 = 0;
   472     03B8  1005               	bcf	5,0	;volatile
   473     03B9                     l37:
   474     03B9  0008               	return
   475     03BA                     __end_of_InitSoftUART:
   476     0000                     ___latbits      equ	0
   477     005E                     btemp           set	94	;btemp
   478     005E                     wtemp0          set	94

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      3       3

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Transmit

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      98
                       _InitSoftUART
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit                                        3     3      0      97
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitSoftUART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitSoftUART
   _UART_Transmit

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62      3       3      4.8%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Oct 29 11:17:41 2024

                     l52 03F5                       l37 03B9                       l53 03E5  
                     l55 03FC                       u90 03E3                       u91 03E2  
                     u84 03DC                       u85 03DA                      l661 03CD  
                    l671 03D6                      l663 03CE                      l681 03F6  
                    l673 03E3                      l665 03D4                      l659 03B4  
                    l675 03E6                      l691 03C7                      l683 03BA  
                    l677 03EC                      l685 03BE                      l679 03EF  
                    l687 03C2                      l689 03C6                      _GP0 0028  
                    _GP1 0029                      u100 03F5                      u101 03F4  
                    u117 03D0                      u127 03E8                      u137 03F8  
                   _GPIO 0005                     _main 03BA                     btemp 005E  
                   start 0000            ?_InitSoftUART 0020         nosup@@$_$_CONFIG 0000  
                  ?_main 0020                    _CMCON 0019                    _ANSEL 009F  
                  _VRCON 0099                    status 0003                    wtemp0 005E  
        __initialization 03FD             __end_of_main 03CB           ??_InitSoftUART 0000  
                 ??_main 0000                   _ADCON0 001F                   _TRISIO 0085  
__end_of__initialization 03FD    __end_of_UART_Transmit 03FD           __pcstackCOMMON 0000  
   __end_of_InitSoftUART 03BA               __pmaintext 03BA                  _TRISIO0 0428  
                _TRISIO1 0429                  __ptext1 03CB                  __ptext2 03B4  
   end_of_initialization 03FD           UART_Transmit@i 0022             _InitSoftUART 03B4  
 UART_Transmit@DataValue 0021      start_initialization 03FD                ___latbits 0000  
          __pcstackBANK0 0020            _UART_Transmit 03CB           ?_UART_Transmit 0020  
        ??_UART_Transmit 0020  
